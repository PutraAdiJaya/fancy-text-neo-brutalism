import * as vscode from 'vscode';

export function activate(context: vscode.ExtensionContext) {
  console.log('Fancy Text Styler extension is activating...');
  
  const provider = new FancyTextViewProvider(context);

  context.subscriptions.push(
    vscode.window.registerWebviewViewProvider('fancyText-view', provider)
  );

  context.subscriptions.push(
    vscode.commands.registerCommand('fancyText.open', async () => {
      await vscode.commands.executeCommand('workbench.view.extension.fancyText-container');
    })
  );

  context.subscriptions.push(
    vscode.commands.registerCommand('fancyText.insertSelection', async () => {
      const editor = vscode.window.activeTextEditor;
      const selected = editor && !editor.selection.isEmpty
        ? editor.document.getText(editor.selection)
        : (await vscode.window.showInputBox({ prompt: 'Enter text to style' })) || '';
      provider.postPrefill(selected);
      await vscode.commands.executeCommand('workbench.view.extension.fancyText-container');
    })
  );
  
  console.log('Fancy Text Styler extension activated');
}

export function deactivate() {}

class FancyTextViewProvider implements vscode.WebviewViewProvider {
  private _view?: vscode.WebviewView;
  
  constructor(private readonly context: vscode.ExtensionContext) {}

  resolveWebviewView(webviewView: vscode.WebviewView): void | Thenable<void> {
    console.log('Resolving webview view');
    
    this._view = webviewView;
    
    webviewView.webview.options = {
      enableScripts: true,
      localResourceRoots: []
    };

    webviewView.webview.html = this.getHtmlContent();
    
    webviewView.webview.onDidReceiveMessage(message => {
      switch (message.type) {
        case 'copy':
          vscode.env.clipboard.writeText(message.text);
          vscode.window.setStatusBarMessage('‚úÖ Copied to clipboard!', 1500);
          break;
        case 'insert':
          const editor = vscode.window.activeTextEditor;
          if (editor && message.text) {
            editor.edit(editBuilder => {
              editBuilder.replace(editor.selection, message.text);
            });
          }
          break;
      }
    });
    
    console.log('Webview view resolved');
  }

  private getHtmlContent(): string {
    return `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Fancy Text Styler</title>
  <style>
    :root { 
      --gap: 4px;
      --aurora-1: linear-gradient(135deg, rgba(139, 92, 246, 0.15) 0%, rgba(236, 72, 153, 0.15) 50%, rgba(245, 158, 11, 0.15) 100%);
      --aurora-2: linear-gradient(225deg, rgba(6, 182, 212, 0.12) 0%, rgba(59, 130, 246, 0.12) 100%);
      --card-glow: 0 4px 20px rgba(139, 92, 246, 0.15), 0 0 40px rgba(236, 72, 153, 0.08);
      --card-hover-glow: 0 8px 30px rgba(139, 92, 246, 0.25), 0 0 60px rgba(236, 72, 153, 0.15);
    }
    * { box-sizing: border-box; }
    body { 
      margin: 0; 
      padding: 0;
      font-family: var(--vscode-font-family); 
      color: var(--vscode-foreground);
      background: var(--vscode-sidebar-background);
      font-size: var(--vscode-font-size);
    }
    .wrap { padding: 10px; display: flex; flex-direction: column; gap: var(--gap); }
    h2 { 
      margin: 0 0 12px 0; 
      font-size: 15px; 
      font-weight: 700;
      background: linear-gradient(135deg, #8B5CF6 0%, #EC4899 50%, #F59E0B 100%);
      -webkit-background-clip: text;
      background-clip: text;
      -webkit-text-fill-color: transparent;
      letter-spacing: 0.5px;
    }
    .input-wrapper {
      position: relative;
    }
    textarea#src { 
      width: 100%; 
      min-height: 70px; 
      resize: vertical; 
      padding: 12px 36px 12px 12px;
      border-radius: 12px; 
      border: 2px solid transparent;
      background: linear-gradient(var(--vscode-input-background), var(--vscode-input-background)) padding-box,
                  linear-gradient(135deg, rgba(139, 92, 246, 0.3), rgba(236, 72, 153, 0.3)) border-box;
      color: var(--vscode-input-foreground);
      font-size: 13px;
      font-family: var(--vscode-editor-font-family);
      line-height: 1.5;
      transition: all 0.3s ease;
    }
    textarea#src:focus {
      outline: none;
      border-color: transparent;
      background: linear-gradient(var(--vscode-input-background), var(--vscode-input-background)) padding-box,
                  linear-gradient(135deg, #8B5CF6, #EC4899, #F59E0B) border-box;
      box-shadow: 0 0 20px rgba(139, 92, 246, 0.3);
    }
    .clear-btn {
      position: absolute;
      top: 8px;
      right: 8px;
      width: 24px;
      height: 24px;
      border: none;
      background: transparent;
      color: var(--vscode-input-foreground);
      cursor: pointer;
      border-radius: 3px;
      font-size: 16px;
      display: none;
      align-items: center;
      justify-content: center;
      opacity: 0.6;
      transition: all 0.2s;
    }
    .clear-btn:hover {
      background: var(--vscode-toolbar-hoverBackground);
      opacity: 1;
    }
    .input-wrapper:hover .clear-btn {
      display: flex;
    }
    .results { 
      display: flex;
      flex-direction: column;
      gap: 4px;
    }
    .card { 
      border: 2px solid transparent;
      border-radius: 8px; 
      padding: 6px 10px;
      background: 
        linear-gradient(var(--vscode-editor-background), var(--vscode-editor-background)) padding-box,
        linear-gradient(135deg, 
          rgba(139, 92, 246, 0.3) 0%, 
          rgba(236, 72, 153, 0.3) 50%, 
          rgba(6, 182, 212, 0.3) 100%
        ) border-box;
      box-shadow: var(--card-glow);
      transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
      position: relative;
      overflow: hidden;
      cursor: pointer;
    }
    .card::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: radial-gradient(circle, rgba(139, 92, 246, 0.08) 0%, transparent 70%);
      opacity: 0;
      transition: opacity 0.4s ease;
    }
    .card:hover::before {
      opacity: 1;
    }
    .card:hover { 
      border-color: transparent;
      background: 
        linear-gradient(var(--vscode-editor-background), var(--vscode-editor-background)) padding-box,
        linear-gradient(135deg, 
          rgba(139, 92, 246, 0.6) 0%, 
          rgba(236, 72, 153, 0.6) 50%, 
          rgba(6, 182, 212, 0.6) 100%
        ) border-box;
      box-shadow: var(--card-hover-glow);
      transform: translateY(-3px) scale(1.01);
    }
    .card .top {
      display: flex; 
      justify-content: space-between; 
      align-items: center;
      gap: 8px;
    }
    .variant { 
      font-size: 13px; 
      line-height: 1.1;
      word-break: break-all;
      user-select: text;
      flex: 1;
      font-family: 'Segoe UI', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Apple Color Emoji', 'Noto Sans', 'Arial Unicode MS', Arial, sans-serif;
    }
    .card .actions {
      display: flex;
      gap: 3px;
      flex-shrink: 0;
      opacity: 0;
      transition: opacity 0.2s;
    }
    .card:hover .actions {
      opacity: 1;
    }
    .meta { 
      font-size: 9px; 
      opacity: 0.45;
      font-weight: 500;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      margin-top: 1px;
    }
    .copy, .insert { 
      width: 28px;
      height: 28px;
      padding: 0;
      border-radius: 0px; 
      border: 2px solid transparent;
      background: transparent;
      color: var(--vscode-icon-foreground);
      cursor: pointer;
      font-size: 15px;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
    }
    .copy:hover {
      background: var(--vscode-button-background);
      border-color: var(--vscode-button-background);
      transform: scale(1.15) rotate(-5deg);
    }
    .insert:hover {
      background: var(--vscode-button-secondaryBackground);
      border-color: var(--vscode-button-secondaryBackground);
      transform: scale(1.15) rotate(5deg);
    }
    footer { 
      font-size: 10px; 
      opacity: 0.5;
      text-align: center;
      margin-top: 12px;
      padding-top: 8px;
      border-top: 1px solid var(--vscode-widget-border);
    }
  </style>
</head>
<body>
  <div class="wrap">
    <h2>üé® Fancy Text</h2>
    <div class="input-wrapper">
      <textarea id="src" placeholder="Type or paste text here...">Hello World</textarea>
      <button class="clear-btn" id="clear" title="Clear text">√ó</button>
    </div>
    <div id="results" class="results"></div>
    <footer>üí° Click to copy ‚Ä¢ üìù Click Insert ‚Ä¢ Some styles show boxes but work when pasted</footer>
  </div>
  <script>
    console.log('Sidebar script loading...');

    const vscode = acquireVsCodeApi();
    const src = document.getElementById('src');
    const clearBtn = document.getElementById('clear');
    const results = document.getElementById('results');

    // Prefill from extension
    window.addEventListener('message', (event) => {
      const msg = event.data;
      if (msg?.type === 'prefill') {
        src.value = msg.text || '';
        doGenerate();
      }
    });

    // Auto-generate on input with debounce
    let t;
    src.addEventListener('input', () => {
      toggleClearButton();
      clearTimeout(t);
      t = setTimeout(doGenerate, 150);
    });

    // Clear button
    clearBtn.addEventListener('click', (e) => {
      e.stopPropagation();
      src.value = '';
      results.innerHTML = '';
      toggleClearButton();
      src.focus();
    });

    // Toggle clear button visibility
    function toggleClearButton() {
      clearBtn.style.display = src.value.trim() ? 'flex' : 'none';
    }

    function doGenerate(){
      try {
        const text = src.value || '';
        if (!text.trim()) { results.innerHTML = ''; return; }
        const items = generateAll(text);
        render(items);
      } catch (e) {
        results.innerHTML = \`<div style="color: red;">Error: \${e.message}</div>\`;
      }
    }

    function render(items){
      results.innerHTML = '';
      for (const it of items){
        const card = document.createElement('div');
        card.className = 'card';

        const top = document.createElement('div');
        top.className = 'top';

        const p = document.createElement('div');
        p.className = 'variant';
        p.textContent = it.text;
        p.title = 'Click to copy';
        p.addEventListener('click', () => vscode.postMessage({ type: 'copy', text: it.text }));

        const actions = document.createElement('div');
        actions.className = 'actions';
        
        const btnCopy = document.createElement('button');
        btnCopy.className = 'copy';
        btnCopy.innerHTML = 'üìã';
        btnCopy.title = 'Copy to clipboard';
        btnCopy.addEventListener('click', () => vscode.postMessage({ type: 'copy', text: it.text }));

        const btnIns = document.createElement('button');
        btnIns.className = 'insert';
        btnIns.innerHTML = 'üìù';
        btnIns.title = 'Insert to editor';
        btnIns.addEventListener('click', () => vscode.postMessage({ type: 'insert', text: it.text }));

        actions.appendChild(btnCopy);
        actions.appendChild(btnIns);
        top.appendChild(p);
        top.appendChild(actions);

        const meta = document.createElement('div');
        meta.className = 'meta';
        meta.textContent = it.label;

        card.appendChild(top);
        card.appendChild(meta);
        results.appendChild(card);
      }
    }

    // Exact Unicode maps from working FancyTextGen
    const map=(t,m)=>Array.from(t).map(c=>m[c]||c).join('');
    const BOLD={'A':'ùêÄ','B':'ùêÅ','C':'ùêÇ','D':'ùêÉ','E':'ùêÑ','F':'ùêÖ','G':'ùêÜ','H':'ùêá','I':'ùêà','J':'ùêâ','K':'ùêä','L':'ùêã','M':'ùêå','N':'ùêç','O':'ùêé','P':'ùêè','Q':'ùêê','R':'ùêë','S':'ùêí','T':'ùêì','U':'ùêî','V':'ùêï','W':'ùêñ','X':'ùêó','Y':'ùêò','Z':'ùêô','a':'ùêö','b':'ùêõ','c':'ùêú','d':'ùêù','e':'ùêû','f':'ùêü','g':'ùê†','h':'ùê°','i':'ùê¢','j':'ùê£','k':'ùê§','l':'ùê•','m':'ùê¶','n':'ùêß','o':'ùê®','p':'ùê©','q':'ùê™','r':'ùê´','s':'ùê¨','t':'ùê≠','u':'ùêÆ','v':'ùêØ','w':'ùê∞','x':'ùê±','y':'ùê≤','z':'ùê≥','0':'ùüé','1':'ùüè','2':'ùüê','3':'ùüë','4':'ùüí','5':'ùüì','6':'ùüî','7':'ùüï','8':'ùüñ','9':'ùüó'};
    const ITALIC={'A':'ùê¥','B':'ùêµ','C':'ùê∂','D':'ùê∑','E':'ùê∏','F':'ùêπ','G':'ùê∫','H':'ùêª','I':'ùêº','J':'ùêΩ','K':'ùêæ','L':'ùêø','M':'ùëÄ','N':'ùëÅ','O':'ùëÇ','P':'ùëÉ','Q':'ùëÑ','R':'ùëÖ','S':'ùëÜ','T':'ùëá','U':'ùëà','V':'ùëâ','W':'ùëä','X':'ùëã','Y':'ùëå','Z':'ùëç','a':'ùëé','b':'ùëè','c':'ùëê','d':'ùëë','e':'ùëí','f':'ùëì','g':'ùëî','h':'‚Ñé','i':'ùëñ','j':'ùëó','k':'ùëò','l':'ùëô','m':'ùëö','n':'ùëõ','o':'ùëú','p':'ùëù','q':'ùëû','r':'ùëü','s':'ùë†','t':'ùë°','u':'ùë¢','v':'ùë£','w':'ùë§','x':'ùë•','y':'ùë¶','z':'ùëß'};
    const BOLDITALIC={'A':'ùë®','B':'ùë©','C':'ùë™','D':'ùë´','E':'ùë¨','F':'ùë≠','G':'ùëÆ','H':'ùëØ','I':'ùë∞','J':'ùë±','K':'ùë≤','L':'ùë≥','M':'ùë¥','N':'ùëµ','O':'ùë∂','P':'ùë∑','Q':'ùë∏','R':'ùëπ','S':'ùë∫','T':'ùëª','U':'ùëº','V':'ùëΩ','W':'ùëæ','X':'ùëø','Y':'ùíÄ','Z':'ùíÅ','a':'ùíÇ','b':'ùíÉ','c':'ùíÑ','d':'ùíÖ','e':'ùíÜ','f':'ùíá','g':'ùíà','h':'ùíâ','i':'ùíä','j':'ùíã','k':'ùíå','l':'ùíç','m':'ùíé','n':'ùíè','o':'ùíê','p':'ùíë','q':'ùíí','r':'ùíì','s':'ùíî','t':'ùíï','u':'ùíñ','v':'ùíó','w':'ùíò','x':'ùíô','y':'ùíö','z':'ùíõ'};
    const SCRIPT={'A':'ùíú','B':'‚Ñ¨','C':'ùíû','D':'ùíü','E':'‚Ñ∞','F':'‚Ñ±','G':'ùí¢','H':'‚Ñã','I':'‚Ñê','J':'ùí•','K':'ùí¶','L':'‚Ñí','M':'‚Ñ≥','N':'ùí©','O':'ùí™','P':'ùí´','Q':'ùí¨','R':'‚Ñõ','S':'ùíÆ','T':'ùíØ','U':'ùí∞','V':'ùí±','W':'ùí≤','X':'ùí≥','Y':'ùí¥','Z':'ùíµ','a':'ùí∂','b':'ùí∑','c':'ùí∏','d':'ùíπ','e':'‚ÑØ','f':'ùíª','g':'‚Ñä','h':'ùíΩ','i':'ùíæ','j':'ùíø','k':'ùìÄ','l':'ùìÅ','m':'ùìÇ','n':'ùìÉ','o':'‚Ñ¥','p':'ùìÖ','q':'ùìÜ','r':'ùìá','s':'ùìà','t':'ùìâ','u':'ùìä','v':'ùìã','w':'ùìå','x':'ùìç','y':'ùìé','z':'ùìè'};
    const BOLDSCRIPT={'A':'ùìê','B':'ùìë','C':'ùìí','D':'ùìì','E':'ùìî','F':'ùìï','G':'ùìñ','H':'ùìó','I':'ùìò','J':'ùìô','K':'ùìö','L':'ùìõ','M':'ùìú','N':'ùìù','O':'ùìû','P':'ùìü','Q':'ùì†','R':'ùì°','S':'ùì¢','T':'ùì£','U':'ùì§','V':'ùì•','W':'ùì¶','X':'ùìß','Y':'ùì®','Z':'ùì©','a':'ùì™','b':'ùì´','c':'ùì¨','d':'ùì≠','e':'ùìÆ','f':'ùìØ','g':'ùì∞','h':'ùì±','i':'ùì≤','j':'ùì≥','k':'ùì¥','l':'ùìµ','m':'ùì∂','n':'ùì∑','o':'ùì∏','p':'ùìπ','q':'ùì∫','r':'ùìª','s':'ùìº','t':'ùìΩ','u':'ùìæ','v':'ùìø','w':'ùîÄ','x':'ùîÅ','y':'ùîÇ','z':'ùîÉ'};
    const DOUBLESTRUCK={'A':'ùî∏','B':'ùîπ','C':'‚ÑÇ','D':'ùîª','E':'ùîº','F':'ùîΩ','G':'ùîæ','H':'‚Ñç','I':'ùïÄ','J':'ùïÅ','K':'ùïÇ','L':'ùïÉ','M':'ùïÑ','N':'‚Ñï','O':'ùïÜ','P':'‚Ñô','Q':'‚Ñö','R':'‚Ñù','S':'ùïä','T':'ùïã','U':'ùïå','V':'ùïç','W':'ùïé','X':'ùïè','Y':'ùïê','Z':'‚Ñ§','a':'ùïí','b':'ùïì','c':'ùïî','d':'ùïï','e':'ùïñ','f':'ùïó','g':'ùïò','h':'ùïô','i':'ùïö','j':'ùïõ','k':'ùïú','l':'ùïù','m':'ùïû','n':'ùïü','o':'ùï†','p':'ùï°','q':'ùï¢','r':'ùï£','s':'ùï§','t':'ùï•','u':'ùï¶','v':'ùïß','w':'ùï®','x':'ùï©','y':'ùï™','z':'ùï´','0':'ùüú','1':'ùüù','2':'ùüû','3':'ùüü','4':'ùü†','5':'ùü°','6':'ùü¢','7':'ùü£','8':'ùü§','9':'ùü•'};
    const FRAKTUR={'A':'ùîÑ','B':'ùîÖ','C':'‚Ñ≠','D':'ùîá','E':'ùîà','F':'ùîâ','G':'ùîä','H':'‚Ñå','I':'‚Ñë','J':'ùîç','K':'ùîé','L':'ùîè','M':'ùîê','N':'ùîë','O':'ùîí','P':'ùîì','Q':'ùîî','R':'‚Ñú','S':'ùîñ','T':'ùîó','U':'ùîò','V':'ùîô','W':'ùîö','X':'ùîõ','Y':'ùîú','Z':'‚Ñ®','a':'ùîû','b':'ùîü','c':'ùî†','d':'ùî°','e':'ùî¢','f':'ùî£','g':'ùî§','h':'ùî•','i':'ùî¶','j':'ùîß','k':'ùî®','l':'ùî©','m':'ùî™','n':'ùî´','o':'ùî¨','p':'ùî≠','q':'ùîÆ','r':'ùîØ','s':'ùî∞','t':'ùî±','u':'ùî≤','v':'ùî≥','w':'ùî¥','x':'ùîµ','y':'ùî∂','z':'ùî∑'};
    const BOLDFRAKTUR={'A':'ùï¨','B':'ùï≠','C':'ùïÆ','D':'ùïØ','E':'ùï∞','F':'ùï±','G':'ùï≤','H':'ùï≥','I':'ùï¥','J':'ùïµ','K':'ùï∂','L':'ùï∑','M':'ùï∏','N':'ùïπ','O':'ùï∫','P':'ùïª','Q':'ùïº','R':'ùïΩ','S':'ùïæ','T':'ùïø','U':'ùñÄ','V':'ùñÅ','W':'ùñÇ','X':'ùñÉ','Y':'ùñÑ','Z':'ùñÖ','a':'ùñÜ','b':'ùñá','c':'ùñà','d':'ùñâ','e':'ùñä','f':'ùñã','g':'ùñå','h':'ùñç','i':'ùñé','j':'ùñè','k':'ùñê','l':'ùñë','m':'ùñí','n':'ùñì','o':'ùñî','p':'ùñï','q':'ùññ','r':'ùñó','s':'ùñò','t':'ùñô','u':'ùñö','v':'ùñõ','w':'ùñú','x':'ùñù','y':'ùñû','z':'ùñü'};
    const SANS={'A':'ùñ†','B':'ùñ°','C':'ùñ¢','D':'ùñ£','E':'ùñ§','F':'ùñ•','G':'ùñ¶','H':'ùñß','I':'ùñ®','J':'ùñ©','K':'ùñ™','L':'ùñ´','M':'ùñ¨','N':'ùñ≠','O':'ùñÆ','P':'ùñØ','Q':'ùñ∞','R':'ùñ±','S':'ùñ≤','T':'ùñ≥','U':'ùñ¥','V':'ùñµ','W':'ùñ∂','X':'ùñ∑','Y':'ùñ∏','Z':'ùñπ','a':'ùñ∫','b':'ùñª','c':'ùñº','d':'ùñΩ','e':'ùñæ','f':'ùñø','g':'ùóÄ','h':'ùóÅ','i':'ùóÇ','j':'ùóÉ','k':'ùóÑ','l':'ùóÖ','m':'ùóÜ','n':'ùóá','o':'ùóà','p':'ùóâ','q':'ùóä','r':'ùóã','s':'ùóå','t':'ùóç','u':'ùóé','v':'ùóè','w':'ùóê','x':'ùóë','y':'ùóí','z':'ùóì','0':'ùüÆ','1':'ùüØ','2':'ùü∞','3':'ùü±','4':'ùü≤','5':'ùü≥','6':'ùü¥','7':'ùüµ','8':'ùü∂','9':'ùü∑'};
    const SANSBOLD={'A':'ùóî','B':'ùóï','C':'ùóñ','D':'ùóó','E':'ùóò','F':'ùóô','G':'ùóö','H':'ùóõ','I':'ùóú','J':'ùóù','K':'ùóû','L':'ùóü','M':'ùó†','N':'ùó°','O':'ùó¢','P':'ùó£','Q':'ùó§','R':'ùó•','S':'ùó¶','T':'ùóß','U':'ùó®','V':'ùó©','W':'ùó™','X':'ùó´','Y':'ùó¨','Z':'ùó≠','a':'ùóÆ','b':'ùóØ','c':'ùó∞','d':'ùó±','e':'ùó≤','f':'ùó≥','g':'ùó¥','h':'ùóµ','i':'ùó∂','j':'ùó∑','k':'ùó∏','l':'ùóπ','m':'ùó∫','n':'ùóª','o':'ùóº','p':'ùóΩ','q':'ùóæ','r':'ùóø','s':'ùòÄ','t':'ùòÅ','u':'ùòÇ','v':'ùòÉ','w':'ùòÑ','x':'ùòÖ','y':'ùòÜ','z':'ùòá','0':'ùü¨','1':'ùü≠','2':'ùüÆ','3':'ùüØ','4':'ùü∞','5':'ùü±','6':'ùü≤','7':'ùü≥','8':'ùü¥','9':'ùüµ'};
    const SANSITALIC={'A':'ùòà','B':'ùòâ','C':'ùòä','D':'ùòã','E':'ùòå','F':'ùòç','G':'ùòé','H':'ùòè','I':'ùòê','J':'ùòë','K':'ùòí','L':'ùòì','M':'ùòî','N':'ùòï','O':'ùòñ','P':'ùòó','Q':'ùòò','R':'ùòô','S':'ùòö','T':'ùòõ','U':'ùòú','V':'ùòù','W':'ùòû','X':'ùòü','Y':'ùò†','Z':'ùò°','a':'ùò¢','b':'ùò£','c':'ùò§','d':'ùò•','e':'ùò¶','f':'ùòß','g':'ùò®','h':'ùò©','i':'ùò™','j':'ùò´','k':'ùò¨','l':'ùò≠','m':'ùòÆ','n':'ùòØ','o':'ùò∞','p':'ùò±','q':'ùò≤','r':'ùò≥','s':'ùò¥','t':'ùòµ','u':'ùò∂','v':'ùò∑','w':'ùò∏','x':'ùòπ','y':'ùò∫','z':'ùòª'};
    const SANSBOLDITALIC={'A':'ùòº','B':'ùòΩ','C':'ùòæ','D':'ùòø','E':'ùôÄ','F':'ùôÅ','G':'ùôÇ','H':'ùôÉ','I':'ùôÑ','J':'ùôÖ','K':'ùôÜ','L':'ùôá','M':'ùôà','N':'ùôâ','O':'ùôä','P':'ùôã','Q':'ùôå','R':'ùôç','S':'ùôé','T':'ùôè','U':'ùôê','V':'ùôë','W':'ùôí','X':'ùôì','Y':'ùôî','Z':'ùôï','a':'ùôñ','b':'ùôó','c':'ùôò','d':'ùôô','e':'ùôö','f':'ùôõ','g':'ùôú','h':'ùôù','i':'ùôû','j':'ùôü','k':'ùô†','l':'ùô°','m':'ùô¢','n':'ùô£','o':'ùô§','p':'ùô•','q':'ùô¶','r':'ùôß','s':'ùô®','t':'ùô©','u':'ùô™','v':'ùô´','w':'ùô¨','x':'ùô≠','y':'ùôÆ','z':'ùôØ'};
    const MONO={'A':'ùô∞','B':'ùô±','C':'ùô≤','D':'ùô≥','E':'ùô¥','F':'ùôµ','G':'ùô∂','H':'ùô∑','I':'ùô∏','J':'ùôπ','K':'ùô∫','L':'ùôª','M':'ùôº','N':'ùôΩ','O':'ùôæ','P':'ùôø','Q':'ùöÄ','R':'ùöÅ','S':'ùöÇ','T':'ùöÉ','U':'ùöÑ','V':'ùöÖ','W':'ùöÜ','X':'ùöá','Y':'ùöà','Z':'ùöâ','a':'ùöä','b':'ùöã','c':'ùöå','d':'ùöç','e':'ùöé','f':'ùöè','g':'ùöê','h':'ùöë','i':'ùöí','j':'ùöì','k':'ùöî','l':'ùöï','m':'ùöñ','n':'ùöó','o':'ùöò','p':'ùöô','q':'ùöö','r':'ùöõ','s':'ùöú','t':'ùöù','u':'ùöû','v':'ùöü','w':'ùö†','x':'ùö°','y':'ùö¢','z':'ùö£','0':'ùü∂','1':'ùü∑','2':'ùü∏','3':'ùüπ','4':'ùü∫','5':'ùüª','6':'ùüº','7':'ùüΩ','8':'ùüæ','9':'ùüø'};
    const CIRCLED={'A':'‚í∂','B':'‚í∑','C':'‚í∏','D':'‚íπ','E':'‚í∫','F':'‚íª','G':'‚íº','H':'‚íΩ','I':'‚íæ','J':'‚íø','K':'‚ìÄ','L':'‚ìÅ','M':'‚ìÇ','N':'‚ìÉ','O':'‚ìÑ','P':'‚ìÖ','Q':'‚ìÜ','R':'‚ìá','S':'‚ìà','T':'‚ìâ','U':'‚ìä','V':'‚ìã','W':'‚ìå','X':'‚ìç','Y':'‚ìé','Z':'‚ìè','a':'‚ìê','b':'‚ìë','c':'‚ìí','d':'‚ìì','e':'‚ìî','f':'‚ìï','g':'‚ìñ','h':'‚ìó','i':'‚ìò','j':'‚ìô','k':'‚ìö','l':'‚ìõ','m':'‚ìú','n':'‚ìù','o':'‚ìû','p':'‚ìü','q':'‚ì†','r':'‚ì°','s':'‚ì¢','t':'‚ì£','u':'‚ì§','v':'‚ì•','w':'‚ì¶','x':'‚ìß','y':'‚ì®','z':'‚ì©','0':'‚ì™','1':'‚ë†','2':'‚ë°','3':'‚ë¢','4':'‚ë£','5':'‚ë§','6':'‚ë•','7':'‚ë¶','8':'‚ëß','9':'‚ë®'};
    const SQUARED={'A':'üÑ∞','B':'üÑ±','C':'üÑ≤','D':'üÑ≥','E':'üÑ¥','F':'üÑµ','G':'üÑ∂','H':'üÑ∑','I':'üÑ∏','J':'üÑπ','K':'üÑ∫','L':'üÑª','M':'üÑº','N':'üÑΩ','O':'üÑæ','P':'üÑø','Q':'üÖÄ','R':'üÖÅ','S':'üÖÇ','T':'üÖÉ','U':'üÖÑ','V':'üÖÖ','W':'üÖÜ','X':'üÖá','Y':'üÖà','Z':'üÖâ','a':'üÑ∞','b':'üÑ±','c':'üÑ≤','d':'üÑ≥','e':'üÑ¥','f':'üÑµ','g':'üÑ∂','h':'üÑ∑','i':'üÑ∏','j':'üÑπ','k':'üÑ∫','l':'üÑª','m':'üÑº','n':'üÑΩ','o':'üÑæ','p':'üÑø','q':'üÖÄ','r':'üÖÅ','s':'üÖÇ','t':'üÖÉ','u':'üÖÑ','v':'üÖÖ','w':'üÖÜ','x':'üÖá','y':'üÖà','z':'üÖâ'};
    const FULLWIDTH={'A':'Ôº°','B':'Ôº¢','C':'Ôº£','D':'Ôº§','E':'Ôº•','F':'Ôº¶','G':'Ôºß','H':'Ôº®','I':'Ôº©','J':'Ôº™','K':'Ôº´','L':'Ôº¨','M':'Ôº≠','N':'ÔºÆ','O':'ÔºØ','P':'Ôº∞','Q':'Ôº±','R':'Ôº≤','S':'Ôº≥','T':'Ôº¥','U':'Ôºµ','V':'Ôº∂','W':'Ôº∑','X':'Ôº∏','Y':'Ôºπ','Z':'Ôº∫','a':'ÔΩÅ','b':'ÔΩÇ','c':'ÔΩÉ','d':'ÔΩÑ','e':'ÔΩÖ','f':'ÔΩÜ','g':'ÔΩá','h':'ÔΩà','i':'ÔΩâ','j':'ÔΩä','k':'ÔΩã','l':'ÔΩå','m':'ÔΩç','n':'ÔΩé','o':'ÔΩè','p':'ÔΩê','q':'ÔΩë','r':'ÔΩí','s':'ÔΩì','t':'ÔΩî','u':'ÔΩï','v':'ÔΩñ','w':'ÔΩó','x':'ÔΩò','y':'ÔΩô','z':'ÔΩö','0':'Ôºê','1':'Ôºë','2':'Ôºí','3':'Ôºì','4':'Ôºî','5':'Ôºï','6':'Ôºñ','7':'Ôºó','8':'Ôºò','9':'Ôºô'};
    const SMALLCAPS={'A':'·¥Ä','B':' ô','C':'·¥Ñ','D':'·¥Ö','E':'·¥á','F':'Íú∞','G':'…¢','H':' ú','I':'…™','J':'·¥ä','K':'·¥ã','L':' ü','M':'·¥ç','N':'…¥','O':'·¥è','P':'·¥ò','Q':'Q','R':' Ä','S':'Íú±','T':'·¥õ','U':'·¥ú','V':'·¥†','W':'·¥°','X':'x','Y':' è','Z':'·¥¢','a':'·¥Ä','b':' ô','c':'·¥Ñ','d':'·¥Ö','e':'·¥á','f':'Íú∞','g':'…¢','h':' ú','i':'…™','j':'·¥ä','k':'·¥ã','l':' ü','m':'·¥ç','n':'…¥','o':'·¥è','p':'·¥ò','q':'q','r':' Ä','s':'Íú±','t':'·¥õ','u':'·¥ú','v':'·¥†','w':'·¥°','x':'x','y':' è','z':'·¥¢'};
    const SUPERSCRIPT={'A':'·¥¨','B':'·¥Æ','C':'·∂ú','D':'·¥∞','E':'·¥±','F':'·∂†','G':'·¥≥','H':'·¥¥','I':'·¥µ','J':'·¥∂','K':'·¥∑','L':'·¥∏','M':'·¥π','N':'·¥∫','O':'·¥º','P':'·¥æ','Q':'Q','R':'·¥ø','S':'À¢','T':'·µÄ','U':'·µÅ','V':'‚±Ω','W':'·µÇ','X':'À£','Y':' ∏','Z':'·∂ª','a':'·µÉ','b':'·µá','c':'·∂ú','d':'·µà','e':'·µâ','f':'·∂†','g':'·µç','h':' ∞','i':'‚Å±','j':' ≤','k':'·µè','l':'À°','m':'·µê','n':'‚Åø','o':'·µí','p':'·µñ','q':'q','r':' ≥','s':'À¢','t':'·µó','u':'·µò','v':'·µõ','w':' ∑','x':'À£','y':' ∏','z':'·∂ª','0':'‚Å∞','1':'¬π','2':'¬≤','3':'¬≥','4':'‚Å¥','5':'‚Åµ','6':'‚Å∂','7':'‚Å∑','8':'‚Å∏','9':'‚Åπ'};
    const SUBSCRIPT={'A':'‚Çê','B':'B','C':'C','D':'D','E':'‚Çë','F':'F','G':'G','H':'‚Çï','I':'·µ¢','J':'‚±º','K':'‚Çñ','L':'‚Çó','M':'‚Çò','N':'‚Çô','O':'‚Çí','P':'‚Çö','Q':'Q','R':'·µ£','S':'‚Çõ','T':'‚Çú','U':'·µ§','V':'·µ•','W':'W','X':'‚Çì','Y':'Y','Z':'Z','a':'‚Çê','b':'b','c':'c','d':'d','e':'‚Çë','f':'f','g':'g','h':'‚Çï','i':'·µ¢','j':'‚±º','k':'‚Çñ','l':'‚Çó','m':'‚Çò','n':'‚Çô','o':'‚Çí','p':'‚Çö','q':'q','r':'·µ£','s':'‚Çõ','t':'‚Çú','u':'·µ§','v':'·µ•','w':'w','x':'‚Çì','y':'y','z':'z','0':'‚ÇÄ','1':'‚ÇÅ','2':'‚ÇÇ','3':'‚ÇÉ','4':'‚ÇÑ','5':'‚ÇÖ','6':'‚ÇÜ','7':'‚Çá','8':'‚Çà','9':'‚Çâ'};
    const UPSIDE={'A':'‚àÄ','B':'·ó∫','C':'∆Ü','D':'·ó°','E':'∆é','F':'‚Ñ≤','G':'◊í','H':'H','I':'I','J':'≈ø','K':' û','L':'À•','M':'W','N':'N','O':'O','P':'‘Ä','Q':'Q','R':'·¥ö','S':'S','T':'‚ä•','U':'‚à©','V':'Œõ','W':'M','X':'X','Y':'‚ÖÑ','Z':'Z','a':'…ê','b':'q','c':'…î','d':'p','e':'«ù','f':'…ü','g':'∆É','h':'…•','i':'·¥â','j':'…æ','k':' û','l':'l','m':'…Ø','n':'u','o':'o','p':'d','q':'b','r':'…π','s':'s','t':' á','u':'n','v':' å','w':' ç','x':'x','y':' é','z':'z','0':'0','1':'∆ñ','2':'·íÖ','3':'∆ê','4':'„Ñ£','5':'œõ','6':'9','7':'„Ñ•','8':'8','9':'6'};
    const STRIKE=(s)=>Array.from(s).map(c=>c===' '?' ':c+'\\u0336').join('');
    const UNDER=(s)=>Array.from(s).map(c=>c===' '?' ':c+'\\u0332').join('');
    const OVER=(s)=>Array.from(s).map(c=>c===' '?' ':c+'\\u0305').join('');
    const BOX_EACH=(s)=>Array.from(s).map(c=>c===' '?' ':'\\u3010'+c+'\\u3011').join('');
    const CORNER_EACH=(s)=>Array.from(s).map(c=>c===' '?' ':'\\u300e'+c+'\\u300f').join('');
    const WRAP_BUBBLE=(s)=>'\\ud83c\\udf70 \\ud83c\\udf80 '+s+' \\ud83c\\udf80 \\ud83c\\udf70';
    const WRAP_STARS=(s)=>'\\u2728 \\u22c6 \\ud83c\\udf1f '+s+' \\ud83c\\udf1f \\u22c6 \\u2728';
    const WRAP_CUTE=(s)=>'(\\u3063\\u25d4\\u25e1\\u25d4)\\u3063 \\u2665 '+s+' \\u2665';
    const WRAP_WAVES=(s)=>'\\u02dc"*\\u00b0\\u2022.\\u02dc"*\\u00b0\\u2022 '+s+' \\u2022\\u00b0*"\\u02dc.\\u2022\\u00b0*"\\u02dc';
    
    // NEW STYLES - 10 additional text transformations
    const GLITCH=(s)=>Array.from(s).map(c=>c+c).join('\\u200b'); // Double chars with zero-width space
    const ZALGO=(s)=>{const d=['ÃÄ','ÃÅ','ÃÇ','ÃÉ','ÃÑ','ÃÖ','ÃÜ','Ãá','Ãà','Ãä','Ãã','Ãå','Ãñ','Ãó','Ãò','Ãô','Ãö','Ãõ']; return Array.from(s).map(c=>c===' '?' ':c+d[Math.floor(Math.random()*d.length)]+d[Math.floor(Math.random()*d.length)]).join('');};
    const MIXED_CASE=(s)=>Array.from(s).map((c,i)=>i%2===0?c.toLowerCase():c.toUpperCase()).join('');
    const REVERSE_TEXT=(s)=>Array.from(s).reverse().join('');
    const SQUARED_NEG={'A':'\\ud83c\\udd70','B':'\\ud83c\\udd71','C':'\\ud83c\\udd72','D':'\\ud83c\\udd73','E':'\\ud83c\\udd74','F':'\\ud83c\\udd75','G':'\\ud83c\\udd76','H':'\\ud83c\\udd77','I':'\\ud83c\\udd78','J':'\\ud83c\\udd79','K':'\\ud83c\\udd7a','L':'\\ud83c\\udd7b','M':'\\ud83c\\udd7c','N':'\\ud83c\\udd7d','O':'\\ud83c\\udd7e','P':'\\ud83c\\udd7f','Q':'\\ud83c\\udd80','R':'\\ud83c\\udd81','S':'\\ud83c\\udd82','T':'\\ud83c\\udd83','U':'\\ud83c\\udd84','V':'\\ud83c\\udd85','W':'\\ud83c\\udd86','X':'\\ud83c\\udd87','Y':'\\ud83c\\udd88','Z':'\\ud83c\\udd89','a':'\\ud83c\\udd70','b':'\\ud83c\\udd71','c':'\\ud83c\\udd72','d':'\\ud83c\\udd73','e':'\\ud83c\\udd74','f':'\\ud83c\\udd75','g':'\\ud83c\\udd76','h':'\\ud83c\\udd77','i':'\\ud83c\\udd78','j':'\\ud83c\\udd79','k':'\\ud83c\\udd7a','l':'\\ud83c\\udd7b','m':'\\ud83c\\udd7c','n':'\\ud83c\\udd7d','o':'\\ud83c\\udd7e','p':'\\ud83c\\udd7f','q':'\\ud83c\\udd80','r':'\\ud83c\\udd81','s':'\\ud83c\\udd82','t':'\\ud83c\\udd83','u':'\\ud83c\\udd84','v':'\\ud83c\\udd85','w':'\\ud83c\\udd86','x':'\\ud83c\\udd87','y':'\\ud83c\\udd88','z':'\\ud83c\\udd89'};
    const WIDE_BOLD=(s)=>map(map(s,FULLWIDTH),BOLD);
    const WAVE_DASH=(s)=>Array.from(s).map(c=>c===' '?' ':c+'~').join('');
    const DOT_SEP=(s)=>Array.from(s).map(c=>c===' '?' ':c+'\\u2022').join('').slice(0,-1); // Remove last dot
    const STAR_WRAP=(s)=>'*\\u2726\\uff65\\uff9f '+s+' \\u2726\\uff65\\uff9f*';
    function generateAll(s){
      const items=[]; 
      const push=(label,text)=>items.push({label,text});
      push('ùêÅùê®ùê•ùêù', map(s, BOLD));
      push('ùêºùë°ùëéùëôùëñùëê', map(s, ITALIC));
      push('ùë©ùíêùíçùíÖ ùë∞ùíïùíÇùíçùíäùíÑ', map(s, BOLDITALIC));
      push('ùíÆùí∏ùìáùíæùìÖùìâ', map(s, SCRIPT));
      push('ùìëùì∏ùìµùì≠ ùì¢ùì¨ùìªùì≤ùìπùìΩ', map(s, BOLDSCRIPT));
      push('ùîªùï†ùï¶ùïìùïùùïñ-ùï§ùï•ùï£ùï¶ùïîùïú', map(s, DOUBLESTRUCK));
      push('ùî™ùî¢ùî°ùî¶ùî¢ùî≥ùîûùî©', map(s, FRAKTUR));
      push('ùï≠ùñîùñëùñâ ùîâùîØùîûùî®ùî±ùî≤ùîØ', map(s, BOLDFRAKTUR));
      push('ùñ≤ùñ∫ùóáùóå-ùóåùñæùóãùóÇùñø', map(s, SANS));
      push('ùóïùóºùóπùó± ùó¶ùóÆùóªùòÄ', map(s, SANSBOLD));
      push('Sans Italic', map(s, SANSITALIC));
      push('Sans Bold Italic', map(s, SANSBOLDITALIC));
      push('ùôºùöòùöóùöòùöúùöôùöäùöåùöé', map(s, MONO));
      push('‚í∏‚ìò‚ì°‚ìí‚ìõ‚ìî‚ìì', map(s, CIRCLED));
      push('üÖÇüÖÄüÖÑüÑ∞üÖÅüÑ¥üÑ≥', map(s, SQUARED));
      push('Ôº¶ÔΩïÔΩåÔΩåÔΩóÔΩâÔΩÑÔΩîÔΩà', map(s, FULLWIDTH));
      push('s·¥ç·¥Ä ü ü ·¥Ñ·¥Ä·¥òs', map(s, SMALLCAPS));
      push('À¢·µò·µñ·µâ ≥À¢·∂ú ≥‚Å±·µñ·µó', map(s, SUPERSCRIPT));
      push('‚Çõ·µ§·µ¶‚Çõc·µ£·µ¢‚Çö‚Çú', map(s, SUBSCRIPT));
      push('ups·¥âp«ù ·ó°o çu', map(s, UPSIDE).split('').reverse().join(''));
      push('SÃ∂tÃ∂rÃ∂iÃ∂kÃ∂eÃ∂', STRIKE(s));
      push('UÃ≤nÃ≤dÃ≤eÃ≤rÃ≤lÃ≤iÃ≤nÃ≤eÃ≤', UNDER(s));
      push('OÃÖvÃÖeÃÖrÃÖlÃÖiÃÖnÃÖeÃÖ', OVER(s));
      push('„ÄêBrackets„Äë', BOX_EACH(s));
      push('„ÄéBoxed„Äè', CORNER_EACH(s));
      push('üç∞ Bubble üç∞', WRAP_BUBBLE(s));
      push('‚ú® Stars ‚ú®', WRAP_STARS(s));
      push('(„ÅÉ‚óî‚ó°‚óî)„ÅÉ ‚ô• Cute ‚ô•', WRAP_CUTE(s));
      push('Àú"*¬∞‚Ä¢ Waves ‚Ä¢¬∞*"Àú', WRAP_WAVES(s));
      // NEW STYLES
      push('‚ö° Glitch', GLITCH(s));
      push('üåÄ Zalgo', ZALGO(s));
      push('üé≠ mIxEd CaSe', MIXED_CASE(s));
      push('üîÅ Reverse', REVERSE_TEXT(s));
      push('‚¨ú Squared Negative', map(s, SQUARED_NEG));
      push('üé™ Wide Bold', WIDE_BOLD(s));
      push('üåä Wave Dash', WAVE_DASH(s));
      push('üìç Dot Separated', DOT_SEP(s));
      push('‚≠ê Star Wrapped', STAR_WRAP(s));
      return items;
    }

    // Initial setup
    toggleClearButton();
    doGenerate();
    console.log('Fancy Text Styler loaded');
  </script>
</body>
</html>`;
  }

  postPrefill(text: string) {
    if (this._view) {
      this._view.webview.postMessage({ type: 'prefill', text });
    }
  }
}
